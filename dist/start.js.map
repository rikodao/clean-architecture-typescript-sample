{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/express/Server.ts","webpack:///./src/express/routers/Users.ts","webpack:///./src/express/routers/index.ts","webpack:///./src/services/contorollers/User/UserRestController.ts","webpack:///./src/services/entities/User/UserEntity.ts","webpack:///./src/services/initialize.ts","webpack:///./src/services/presenters/UserJsonEmitPresenter.ts","webpack:///./src/services/repositories/user/UserOnMemoryRepository.ts","webpack:///./src/services/usecases/user/UserInteractor.ts","webpack:///./src/shared/Logger.ts","webpack:///./src/shared/Misc.ts","webpack:///./src/shared/index.ts","webpack:///./src/start.ts","webpack:///external \"cookie-parser\"","webpack:///external \"events\"","webpack:///external \"express\"","webpack:///external \"http-status-codes\"","webpack:///external \"morgan\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"tsyringe\"","webpack:///external \"winston\""],"names":[],"mappings":"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","file":"start.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/start.ts\");\n","import cookieParser from 'cookie-parser';\nimport express from 'express';\nimport logger from 'morgan';\nimport BaseRouter from './routers/index';\nimport \"reflect-metadata\";\nconst app = express();\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({extended: true}));\napp.use(cookieParser());\n\napp.use('/api', BaseRouter);\n\nexport default app;\n","import { logger } from '@shared';\nimport { Request, Response, Router } from 'express';\nimport { BAD_REQUEST } from 'http-status-codes';\nimport { UserEntity } from 'src/services/entities/User/UserEntity';\nimport express = require('express');\nimport { userListEvent } from '../../services/presenters/UserJsonEmitPresenter';\nimport { IUserRouter } from '../../services/contorollers/adapters/routers/IUserRouter';\nimport \"reflect-metadata\";\nimport { userRestController } from '../../services/initialize';\nconst userController = userRestController;\n\n// Init shared\nconst router = Router();\n\n// const userOnMemoryRepository = new UserOnMemoryRepository();\n// const userExpressRestPresenter = new UserJsonEmitPresenter()\n// const userUsecase = new UserInteractor(userOnMemoryRepository, userExpressRestPresenter);\n\n\n\n\n/******************************************************************************\n *                      Get All Users - \"GET /api/users/all\"\n ******************************************************************************/\n\nrouter.get('/all', (req: express.Request, res: express.Response): void => {\n    try {\n        userController.get()\n        userListEvent.once('userList', (data: UserEntity[]) => res.send(data))\n    } catch (err) {\n        logger.error(err.message, err);\n        res.status(BAD_REQUEST).json({\n            error: err.message,\n        });\n    }\n});\n\n/******************************************************************************\n *                       Add One - \"POST /api/users/add\"\n ******************************************************************************/\n\n\nrouter.post('/create', (req: express.Request, res: express.Response): void => {\n    try {\n        userController.post(req as unknown as IUserRouter) // 型の付け方不明\n        userListEvent.once('user', (data: UserEntity) => res.send(data))\n    } catch (err) {\n        logger.error(err.message, err);\n        res.status(BAD_REQUEST).json({\n            error: err.message,\n        });\n    }\n});\n\n/******************************************************************************\n *                       Update - \"PUT /api/users/update\"\n ******************************************************************************/\n\nrouter.put('/update', async (req: Request, res: Response) => {\n    try {\n        userController.put(req as unknown as IUserRouter) // 型の付け方不明\n        userListEvent.once('user', (data: UserEntity) => res.send(data))\n    } catch (err) {\n        logger.error(err.message, err);\n        res.status(BAD_REQUEST).json({\n            error: err.message,\n        });\n    }\n});\n\n/******************************************************************************\n *                    Delete - \"DELETE /api/users/delete/:id\"\n ******************************************************************************/\n\nrouter.delete('/delete/:id', async (req: Request, res: Response) => {\n    try {\n        userController.delete(req as unknown as IUserRouter) // 型の付け方不明\n        userListEvent.once('user', (data: UserEntity) => res.send(data))\n    } catch (err) {\n        logger.error(err.message, err);\n        res.status(BAD_REQUEST).json({\n            error: err.message,\n        });\n    }\n});\n\n/******************************************************************************\n *                                     Export\n ******************************************************************************/\n\nexport default router;\n","import { Router } from 'express';\nimport UserRouter from './Users';\n\n// Init router and path\nconst router = Router();\n\n// Add sub-routes\nrouter.use('/users', UserRouter);\n\n// Export the base-router\nexport default router;\n","import { IUserRouter } from '@contorollers/adapters/routers/IUserRouter';\nimport { IUserUsecase } from '@usecases/user/UserInteractor';\nimport {injectable, inject} from \"tsyringe\";\n\n\nexport interface UserController {\n    get(req: IUserRouter): void;\n    post(req: IUserRouter): void;\n    put(req: IUserRouter): void;\n    delete(req: IUserRouter): void;\n}\n\n@injectable()\nexport class UserRestController implements UserController {\n    constructor(@inject(\"IUserUsecase\") private userUsecase: IUserUsecase) {\n        this.userUsecase = userUsecase;\n    }\n\n    /**\n     *\n     *\n     * @memberof UserRestController\n     */\n    public get(): void {\n        this.userUsecase.getAllUsers();\n    }\n\n    /**\n     *\n     *\n     * @param {IUserRouter} req\n     * @memberof UserRestController\n     */\n    public post(req: IUserRouter): void {\n        const { name, email } = req.body;\n        this.userUsecase.createNewUser(name, email);\n    }\n\n\n    /**\n     *\n     *\n     * @param {IUserRouter} req\n     * @memberof UserRestController\n     */\n    public put(req: IUserRouter): void {\n        const { id, name, email } = req.body;\n\n        if (!id) throw new Error('idがありません')\n\n        this.userUsecase.updateUser(id, name, email);\n    }\n\n    /**\n     *\n     *\n     * @param {IUserRouter} req\n     * @memberof UserRestController\n     */\n    public delete(req: IUserRouter): void {\n        const id = Number(req.params.id);\n\n        if (!id) throw new Error('idがありません')\n\n        this.userUsecase.destroyUser(id);\n    }\n}\n","export class UserEntity {\n    public id?: number;\n    public name: string;\n    public email: string;\n\n    constructor(name: string, email: string, id?: number) {\n        this.name = name;\n        this.email = email;\n        this.id = id;\n    }\n}\n","import 'reflect-metadata';\nimport { container } from 'tsyringe';\nimport { UserRestController } from './contorollers/User/UserRestController';\nimport { UserInteractor } from './usecases/user/UserInteractor';\nimport { UserOnMemoryRepository } from './repositories/user/UserOnMemoryRepository';\nimport { UserJsonEmitPresenter } from './presenters/UserJsonEmitPresenter';\n\ncontainer.register('IUserUsecase', { useClass: UserInteractor })\ncontainer.register('IUserRepository', { useClass: UserOnMemoryRepository })\ncontainer.register('IUserPresenter', { useClass: UserJsonEmitPresenter })\n\nexport const userRestController = container.resolve(UserRestController);","import { IUserPresenter } from \"@usecases/adapters/presenters/IUserPresenter\";\nimport { UserEntity } from \"@entities/User/UserEntity\";\nimport { EventEmitter } from 'events';\nimport { injectable } from \"tsyringe\";\nexport const userListEvent = new EventEmitter;\n\n@injectable()\nexport class UserJsonEmitPresenter implements IUserPresenter {\n    constructor() {\n    }\n\n\n    presentUser(user: UserEntity): void {\n        console.log('presentUser',user);\n        userListEvent.emit('user', user);\n    }\n    presentUserList(users: UserEntity[]): void {\n        console.log('presentUserList');\n        \n        userListEvent.emit('userList', users);\n    }\n\n}","import { IUserRepository } from \"../../usecases/adapters/repositories/IUserRepository\";\nimport { UserEntity } from \"src/services/entities/User/UserEntity\";\nimport { injectable } from \"tsyringe\";\n\n@injectable()\nexport class UserOnMemoryRepository implements IUserRepository {\n    protected users: UserEntity[];\n    constructor() {\n        this.users = [\n            { id: 1, name: 'one', email: 'one@mail.com' },\n            { id: 2, name: 'two', email: 'two@mail.com' },\n        ];\n    }\n\n    /**\n     * メモリにユーザーを作成する\n     *\n     * @param {UserEntity} user\n     * @returns {Promise<UserEntity>}\n     * @memberof UserOnMemoryRepository\n     */\n    async create(user: UserEntity): Promise<void> {\n        const newUser = { ...user, id: (this.users.length + 1), };\n        this.users.push(newUser);\n    }\n\n\n    /**\n     * メモリのユーザーをすべて取得する\n     *\n     * @returns {Promise<UserEntity[]>}\n     * @memberof UserOnMemoryRepository\n     */\n    async getAll(): Promise<UserEntity[]> {\n        return this.users;\n    }\n\n    /**\n     * メモリのユーザーをすべて取得する\n     *\n     * @returns {Promise<UserEntity[]>}\n     * @memberof UserOnMemoryRepository\n     */\n    async getUser(id: number): Promise<UserEntity> {\n        return this.users.find(user => user.id === id) || {} as UserEntity;\n    }\n\n    async update(newUser: UserEntity): Promise<void> {\n        const index: number = this.users.findIndex(user => user.id == newUser.id)\n        this.users[index] = newUser;\n    }\n\n    /**\n     * メモリから指定のユーザーを削除する\n     *\n     * @param {Number} id\n     * @returns {Promise<UserEntity>}\n     * @memberof UserOnMemoryRepository\n     */\n    async delete(id: Number): Promise<void> {\n        const index: number = this.users.findIndex(user => user.id == id)\n        const deletedUser = this.users.splice(index, 1)[0];\n    }\n\n}","import { UserEntity } from '../../entities/User/UserEntity';\nimport { IUserRepository } from \"@usecases/adapters/repositories/IUserRepository\";\nimport { IUserPresenter } from \"@usecases//adapters/presenters/IUserPresenter\";\nimport { injectable, inject } from \"tsyringe\";\nexport interface IUserUsecase {\n    createNewUser(name: string, email: string): void;\n    getAllUsers(): void;\n    updateUser(id: number, name: string, email: string): void;\n    destroyUser(id: Number): void;\n}\n\n/**\n * 1. Controllerから呼び出されて、\n * 2. Repositoryなどを使ってEntityを操作して\n * 3. OuputPortに結果を出力する\n */\n\n@injectable()\nexport class UserInteractor implements IUserUsecase {\n    constructor(\n        @inject(\"IUserRepository\") private readonly userRepository: IUserRepository,\n        @inject(\"IUserPresenter\") private readonly outputPort: IUserPresenter\n    ) {\n        this.userRepository = userRepository;\n        this.outputPort = outputPort;\n    }\n\n    async createNewUser(name: string, email: string) {\n        const newUser = new UserEntity(name, email)\n        await this.userRepository.create(newUser).catch(err => {\n            throw new Error(\"userRepository.create Exeption\");\n        });\n        this.outputPort.presentUser(newUser);\n    }\n\n    async getAllUsers() {\n        const users: UserEntity[] = await this.userRepository.getAll();\n        this.outputPort.presentUserList(users);\n    }\n\n    async updateUser(id: number, name: string, email: string) {\n        const updateUser = new UserEntity(name, name, id)\n        await this.userRepository.update(updateUser);\n        this.outputPort.presentUser(updateUser);\n\n    }\n\n    async destroyUser(id: number) {\n        const deletedUser: UserEntity = await this._getUser(id);\n        await this.userRepository.delete(id);\n\n        this.outputPort.presentUser(deletedUser);\n    }\n\n    _getUser(id: number): Promise<UserEntity> {\n        return this.userRepository.getUser(id).catch(err => {\n            throw new Error(\"userRepository.getUser Exeption\");\n        });\n\n    }\n\n}\n","/**\n * Setup the winston logger.\n *\n * Documentation: https://github.com/winstonjs/winston\n */\n\nimport { createLogger, format, transports } from 'winston';\n\n// Import Functions\nconst { File, Console } = transports;\n\n// Init Logger\nconst wintstonLogger = createLogger({\n    level: 'info',\n});\n\n/**\n * For production write to all logs with level `info` and below\n * to `combined.log. Write all logs error (and below) to `error.log`.\n * For development, print to the console.\n */\nif (process.env.NODE_ENV === 'production') {\n\n    const fileFormat = format.combine(\n        format.timestamp(),\n        format.json(),\n    );\n    const errTransport = new File({\n        filename: './logs/error.log',\n        format: fileFormat,\n        level: 'error',\n    });\n    const infoTransport = new File({\n        filename: './logs/combined.log',\n        format: fileFormat,\n    });\n    wintstonLogger.add(errTransport);\n    wintstonLogger.add(infoTransport);\n\n} else {\n\n    const errorStackFormat = format((info) => {\n        if (info.stack) {\n            // tslint:disable-next-line:no-console\n            console.log(info.stack);\n            return false;\n        }\n        return info;\n    });\n    const consoleTransport = new Console({\n        format: format.combine(\n            format.colorize(),\n            format.simple(),\n            errorStackFormat(),\n        ),\n    });\n    wintstonLogger.add(consoleTransport);\n}\n\n// Export logger\nexport const logger = wintstonLogger;\n","import { logger } from './Logger';\n\nexport const paramMissingError = 'One or more of the required parameters was missing.';\n\nexport const pErr = (err: Error) => {\n    if (err) {\n        logger.error(err);\n    }\n};\n\nexport const getRandomInt = () => {\n    return Math.floor(Math.random() * 1_000_000_000_000);\n};\n","export * from './Logger';\nexport * from './Misc';\n","import \"reflect-metadata\";\nimport app from './express/Server';\nimport { logger } from '@shared';\n\n\nconst port = Number(process.env.PORT || 3000);\napp.listen(port, () => {\n    logger.info('Express server started on port: ' + port);\n});\n","module.exports = require(\"cookie-parser\");","module.exports = require(\"events\");","module.exports = require(\"express\");","module.exports = require(\"http-status-codes\");","module.exports = require(\"morgan\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"tsyringe\");","module.exports = require(\"winston\");"],"sourceRoot":""}